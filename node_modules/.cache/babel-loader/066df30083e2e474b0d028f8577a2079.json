{"ast":null,"code":"import _toConsumableArray from \"/home/devugees/Desktop/Reactjs/loops2/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/devugees/Desktop/Reactjs/loops2/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/devugees/Desktop/Reactjs/loops2/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/devugees/Desktop/Reactjs/loops2/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/devugees/Desktop/Reactjs/loops2/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/devugees/Desktop/Reactjs/loops2/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/devugees/Desktop/Reactjs/loops2/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      fruits: ['Apple', 'Banana', 'Lemon ', 'Kiwi', 'PineApple'],\n      inputValue: ''\n    };\n\n    _this.removeFruit = function (fruit) {\n      var fruitIndex = _this.state.fruits.findIndex(function (f) {\n        return fruit === f; // returns if fruit is f\n      });\n\n      if (fruitIndex === -1) return;\n\n      var fruits = _toConsumableArray(_this.state.fruits);\n\n      fruits.splice(fruitIndex, 1);\n\n      _this.setState({\n        fruits: fruits\n      });\n    };\n\n    _this.addFruit = function () {\n      _this.setState({\n        fruits: _toConsumableArray(_this.state.fruits).concat([_this.inputValue])\n      });\n    };\n\n    _this.updateInputValue = function (event) {\n      _this.setState({\n        inputValue: event.target.value\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      // task : convert the fruits array to an jsx array using the for loop and render it\n      // let fruitsArr = [];\n      // for (let index = 0; index < this.state.fruits.length; index++) {\n      //   fruitsArr.push(<li>{this.state.fruits[index]}</li>);\n      // }\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"Loops part 1\"), React.createElement(\"input\", {\n        type: \"text\",\n        onChange: this.updateInputValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.removeFruit.bind(this, 'Apple'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Remove Apple\"), React.createElement(\"button\", {\n        onClick: this.addFruit.bind(this, this.inputValue),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Add Mango\"), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, this.state.fruits.map(function (fruit) {\n        return React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, fruit);\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/devugees/Desktop/Reactjs/loops2/src/App.js"],"names":["React","Component","App","state","fruits","inputValue","removeFruit","fruit","fruitIndex","findIndex","f","splice","setState","addFruit","updateInputValue","event","target","value","bind","map"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,OAAO,WAAP;;IAEMC,G;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,MAAM,EAAE,CAAC,OAAD,EAAU,QAAV,EAAoB,QAApB,EAA8B,MAA9B,EAAsC,WAAtC,CADF;AAENC,MAAAA,UAAU,EAAE;AAFN,K;;UAIRC,W,GAAc,UAAAC,KAAK,EAAI;AACrB,UAAMC,UAAU,GAAG,MAAKL,KAAL,CAAWC,MAAX,CAAkBK,SAAlB,CAA4B,UAAAC,CAAC,EAAI;AAClD,eAAOH,KAAK,KAAKG,CAAjB,CADkD,CAC9B;AACrB,OAFkB,CAAnB;;AAGA,UAAIF,UAAU,KAAK,CAAC,CAApB,EAAuB;;AACvB,UAAMJ,MAAM,sBAAO,MAAKD,KAAL,CAAWC,MAAlB,CAAZ;;AACAA,MAAAA,MAAM,CAACO,MAAP,CAAcH,UAAd,EAA0B,CAA1B;;AACA,YAAKI,QAAL,CAAc;AACZR,QAAAA,MAAM,EAAEA;AADI,OAAd;AAGD,K;;UACDS,Q,GAAW,YAAM;AACf,YAAKD,QAAL,CAAc;AACZR,QAAAA,MAAM,qBAAM,MAAKD,KAAL,CAAWC,MAAjB,UAAyB,MAAKC,UAA9B;AADM,OAAd;AAGD,K;;UACDS,gB,GAAmB,UAAAC,KAAK,EAAI;AAC1B,YAAKH,QAAL,CAAc;AACZP,QAAAA,UAAU,EAAEU,KAAK,CAACC,MAAN,CAAaC;AADb,OAAd;AAGD,K;;;;;;;6BAEQ;AACP;AACA;AACA;AACA;AACA;AAEA,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHF,EAIE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAE,KAAKH,gBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,EAKE;AAAQ,QAAA,OAAO,EAAE,KAAKR,WAAL,CAAiBY,IAAjB,CAAsB,IAAtB,EAA4B,OAA5B,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBALF,EAQE;AAAQ,QAAA,OAAO,EAAE,KAAKL,QAAL,CAAcK,IAAd,CAAmB,IAAnB,EAAyB,KAAKb,UAA9B,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBARF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKF,KAAL,CAAWC,MAAX,CAAkBe,GAAlB,CAAsB,UAAAZ,KAAK,EAAI;AAC9B,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKA,KAAL,CAAP;AACD,OAFA,CADH,CAXF,CADF;AAoBD;;;;EAtDeN,S;;AAyDlB,eAAeC,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    fruits: ['Apple', 'Banana', 'Lemon ', 'Kiwi', 'PineApple'],\n    inputValue: ''\n  };\n  removeFruit = fruit => {\n    const fruitIndex = this.state.fruits.findIndex(f => {\n      return fruit === f; // returns if fruit is f\n    });\n    if (fruitIndex === -1) return;\n    const fruits = [...this.state.fruits];\n    fruits.splice(fruitIndex, 1);\n    this.setState({\n      fruits: fruits\n    });\n  };\n  addFruit = () => {\n    this.setState({\n      fruits: [...this.state.fruits, this.inputValue]\n    });\n  };\n  updateInputValue = event => {\n    this.setState({\n      inputValue: event.target.value\n    });\n  };\n\n  render() {\n    // task : convert the fruits array to an jsx array using the for loop and render it\n    // let fruitsArr = [];\n    // for (let index = 0; index < this.state.fruits.length; index++) {\n    //   fruitsArr.push(<li>{this.state.fruits[index]}</li>);\n    // }\n\n    return (\n      <div className=\"App\">\n        {/* comment */}\n\n        <h1>Loops part 1</h1>\n        <input type=\"text\" onChange={this.updateInputValue} />\n        <button onClick={this.removeFruit.bind(this, 'Apple')}>\n          Remove Apple\n        </button>\n        <button onClick={this.addFruit.bind(this, this.inputValue)}>\n          Add Mango\n        </button>\n        <ul>\n          {this.state.fruits.map(fruit => {\n            return <li>{fruit}</li>;\n          })}\n        </ul>\n        {/* <ul>{fruitsArr}</ul> */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}